services:
#  server:
#    build: server/
#    ports:
#      - "8080:8080"
#    depends_on:
#      db:
#        condition: service_healthy
#    volumes:
#      - /apps/otustinder/server:/opt/server
  database:
    image: postgres
    volumes:
      - /apps/otustinder/data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: otustinder
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: lukinv
      POSTGRES_PASSWORD: secret
    ports:
      - "54333:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
  pgadmin:
    image: dpage/pgadmin4:4.23
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 15432:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
  setup:
    profiles:
      - setup
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ./setup/lib.sh:/lib.sh:ro,Z
      - ./setup/roles:/roles:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      METRICBEAT_INTERNAL_PASSWORD: ${METRICBEAT_INTERNAL_PASSWORD:-}
      FILEBEAT_INTERNAL_PASSWORD: ${FILEBEAT_INTERNAL_PASSWORD:-}
      HEARTBEAT_INTERNAL_PASSWORD: ${HEARTBEAT_INTERNAL_PASSWORD:-}
      MONITORING_INTERNAL_PASSWORD: ${MONITORING_INTERNAL_PASSWORD:-}
      BEATS_SYSTEM_PASSWORD: ${BEATS_SYSTEM_PASSWORD:-}
    networks:
      - elk
    depends_on:
      - elasticsearch

  elasticsearch:
      build:
        context: monitoring/elasticsearch/
        args:
          ELASTIC_VERSION: ${ELASTIC_VERSION}
      volumes:
        - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
        - elasticsearch:/usr/share/elasticsearch/data:Z
      ports:
        - 9200:9200
        - 9300:9300
      environment:
        node.name: elasticsearch
        ES_JAVA_OPTS: -Xms512m -Xmx512m
        # Bootstrap password.
        # Used to initialize the keystore during the initial startup of
        # Elasticsearch. Ignored on subsequent runs.
        ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
        # Use single node discovery in order to disable production mode and avoid bootstrap checks.
        # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
        discovery.type: single-node
      networks:
        - elk
      restart: unless-stopped

  logstash:
      build:
        context: monitoring/logstash/
        args:
          ELASTIC_VERSION: ${ELASTIC_VERSION}
      volumes:
        - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
        - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
      ports:
        - 5044:5044
        - 50000:50000/tcp
        - 50000:50000/udp
        - 9600:9600
      environment:
        LS_JAVA_OPTS: -Xms256m -Xmx256m
        LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      networks:
        - elk
      depends_on:
        - elasticsearch
      restart: unless-stopped

  kibana:
      build:
        context: monitoring/kibana/
        args:
          ELASTIC_VERSION: ${ELASTIC_VERSION}
      volumes:
        - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
      ports:
        - 5601:5601
      environment:
        KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
      networks:
        - elk
      depends_on:
        - elasticsearch
      restart: unless-stopped

  networks:
    elk:
      driver: bridge

  volumes:
    elasticsearch: